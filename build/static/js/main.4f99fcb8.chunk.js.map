{"version":3,"sources":["components/Header.js","components/DetailHeader.js","components/Signup.js","components/SignIn.js","suggestions.js","App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","className","href","this","props","navbar","src","alt","onClick","firebase","auth","signOut","Component","DetailHeader","style","paddingTop","delimiters","Signup","tags","length","get_user","currentUser","email","ReactTags","placeholder","suggestions","handleDelete","handleAddition","allowDragDrop","inline","showError","type","handleSubmit","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","SignIn","firebaseAuth","DOMAINS","initializeApp","appId","apiKey","authDomain","projectId","messagingSenderId","db","firestore","App","state","isSignedIn","token","bind","i","setState","filter","tag","index","e","preventDefault","tags_list","forEach","domain","push","text","collection","doc","set","name","displayName","newsKeywords","alert","docRef","get","then","exists","data","temp","id","catch","error","console","log","unregisterAuthObserver","onAuthStateChanged","user","messaging","usePublicVapidKey","requestPermission","a","async","getToken","err","basename","process","path","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","useServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4f99fcb8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport firebase from \"firebase\";\r\n\r\nimport \"./css/header.css\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    /*eslint-disable*/\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container header-container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10\">\r\n              <a href=\"#/\" className=\"header-logo\">\r\n                FNPLUS TECH\r\n              </a>\r\n            </div>\r\n            <div className=\"col-2\">\r\n              {this.props.navbar ? (\r\n                <div className=\"dropdown\">\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + \"/images/menu.png\"}\r\n                    alt=\"nav\"\r\n                    className=\"dropbtn\"\r\n                  />\r\n                  <div className=\"dropdown-content\">\r\n                    <a href=\"#\" onClick={() => firebase.auth().signOut()}>\r\n                      SignOut\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport \"./css/DetailHeader.css\";\r\n\r\nclass DetailHeader extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\" style={{ paddingTop: \"30px\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"detail-container\">\r\n                <div className=\"detail-heading\">News For You</div>\r\n                <div className=\"detail-subheading\">\r\n                  At the speed the tech world is evolving keeping up to date\r\n                  with it can prove to be hard and we are here to help you. Just\r\n                  let us know what domains interest you the most and we'll send\r\n                  you trending news about it.\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailHeader;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport firebase from \"firebase\";\r\n\r\nimport \"./css/tags.css\";\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\nclass Signup extends Component {\r\n  componentDidMount() {\r\n    if (this.props.tags.length === 0) {\r\n      this.props.get_user(firebase.auth().currentUser.email);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let placeholder = \"Choose Your Domains\";\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"reacttag-container container\">\r\n          <ReactTags\r\n            tags={this.props.tags}\r\n            placeholder={placeholder}\r\n            suggestions={this.props.suggestions}\r\n            handleDelete={this.props.handleDelete}\r\n            handleAddition={this.props.handleAddition}\r\n            allowDragDrop={false}\r\n            delimiters={delimiters}\r\n            inline={false}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            \"show-error container \" + (this.props.showError ? \"\" : \"hidden\")\r\n          }\r\n        >\r\n          No Options Selected\r\n        </div>\r\n\r\n        <form className=\"signup-form container\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"signup-btn-fill\"\r\n            onClick={this.props.handleSubmit}\r\n          >\r\n            Sign Me Up\r\n          </button>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport firebase from \"firebase\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n\r\nimport \"./css/signin.css\";\r\n\r\nconst uiConfig = {\r\n  signInFlow: \"popup\",\r\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n  callbacks: {\r\n    signInSuccessWithAuthResult: () => true\r\n  }\r\n};\r\nclass SignIn extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container signin-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/images/signin-bg.jpg\"}\r\n              alt=\"signin-background\"\r\n              className=\"img-responsive signin-img\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-6 signin-text-container\">\r\n            <div className=\"signin-text\">\r\n              <h2>Join the Community!</h2>\r\n\r\n              <div className=\"signin-btn\">\r\n                <StyledFirebaseAuth\r\n                  uiConfig={uiConfig}\r\n                  firebaseAuth={firebase.auth()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","export const DOMAINS = [\r\n  \"AR/VR\",\r\n  \"AI/ML/DL\",\r\n  \"Android\",\r\n  \"Big Data / Data Science\",\r\n  \"Blockchain\",\r\n  \"Cloud Computing\",\r\n  \"Competitive Programming\",\r\n  \"Cyber Security\",\r\n  \"Design Thinking\",\r\n  \"Devops\",\r\n  \"Distributed Systems\",\r\n  \"Flutter\",\r\n  \"IoT/Robotics\",\r\n  \"Testing\",\r\n  \"UI/UX\",\r\n  \"Web Backend\",\r\n  \"Web Frontend\"\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport firebase from \"firebase\";\r\n// import { messaging } from \"./init-fcm\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport DetailHeader from \"./components/DetailHeader\";\r\nimport Signup from \"./components/Signup\";\r\nimport SignIn from \"./components/SignIn\";\r\n\r\nimport { DOMAINS } from \"./suggestions\";\r\n\r\nconst config = {\r\n  appId: \"1:38226611639:web:f4eb0e1549522cc9\",\r\n  apiKey: \"AIzaSyBL6LDmX6fuIy5d35iq15jz9fW-AnwtwDI\",\r\n  authDomain: \"community-updates.firebaseapp.com\",\r\n  projectId: \"community-updates\",\r\n  messagingSenderId: \"38226611639\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nvar db = firebase.firestore();\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tags: [],\r\n      suggestions: [],\r\n      showError: false,\r\n      isSignedIn: false,\r\n      token: \"\"\r\n    };\r\n\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleAddition = this.handleAddition.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.get_user = this.get_user.bind(this);\r\n  }\r\n\r\n  handleDelete(i) {\r\n    const { tags } = this.state;\r\n    this.setState({\r\n      tags: tags.filter((tag, index) => index !== i)\r\n    });\r\n  }\r\n\r\n  handleAddition(tag) {\r\n    this.setState(state => ({ tags: [...state.tags, tag], showError: false }));\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const { tags } = this.state;\r\n\r\n    if (tags.length === 0) {\r\n      this.setState({ showError: true });\r\n    } else {\r\n      let tags_list = [];\r\n\r\n      tags.forEach(domain => {\r\n        tags_list.push(domain.text);\r\n      });\r\n\r\n      db.collection(\"users\")\r\n        .doc(firebase.auth().currentUser.email)\r\n        .set({\r\n          name: firebase.auth().currentUser.displayName,\r\n          email: firebase.auth().currentUser.email,\r\n          newsKeywords: tags_list,\r\n          token: this.state.token\r\n        });\r\n\r\n      alert(\"Signed Up Successfully!\");\r\n    }\r\n  }\r\n\r\n  get_user(email) {\r\n    var docRef = db.collection(\"users\").doc(email);\r\n\r\n    this.setState({ tags: [] });\r\n\r\n    docRef\r\n      .get()\r\n      .then(doc => {\r\n        if (doc.exists) {\r\n          let data = doc.data();\r\n          data.newsKeywords.forEach(domain => {\r\n            let temp = {\r\n              id: domain,\r\n              text: domain\r\n            };\r\n            this.setState(state => ({ tags: [...state.tags, temp] }));\r\n          });\r\n        } else {\r\n          db.collection(\"users\")\r\n            .doc(email)\r\n            .set({\r\n              name: firebase.auth().currentUser.displayName,\r\n              email: firebase.auth().currentUser.email,\r\n              newsKeywords: [],\r\n              token: \"\"\r\n            });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    DOMAINS.forEach(domain => {\r\n      let temp = {\r\n        id: domain,\r\n        text: domain\r\n      };\r\n      this.setState(state => ({ suggestions: [...state.suggestions, temp] }));\r\n    });\r\n\r\n    this.unregisterAuthObserver = firebase\r\n      .auth()\r\n      .onAuthStateChanged(user => this.setState({ isSignedIn: !!user }));\r\n\r\n    // FCM Setup --- Ask for notification permission\r\n    const messaging = firebase.messaging();\r\n    messaging.usePublicVapidKey(\r\n      \"BMXXuXuiGgtBPLsOlj9O8Xeg-D53bZ4xc38saTUWGCQfFnBxhEyhwU3SWxAYxp9KB_Ck8MHMeBPvb5HE9fVfuqg\"\r\n    );\r\n    messaging\r\n      .requestPermission()\r\n      .then(async function () {\r\n        console.log(\"Notification Permission Granted!\");\r\n        const token = await messaging.getToken();\r\n        // TODO: Remove console print in production build\r\n        console.log(\"Token: \" + token);\r\n        return token;\r\n      })\r\n      .then(token => {\r\n        this.setState({ token: token });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Notification Permission Denied\");\r\n      });\r\n\r\n    const renderNotification = (notification, i) => <li key={i}>{notification}</li>;\r\n\r\n    const registerPushListener = pushNotification =>\r\n      navigator.serviceWorker.addEventListener(\"message\", ({ data }) =>\r\n        pushNotification(\r\n          data.data\r\n            ? data.data.message\r\n            : data[\"firebase-messaging-msg-data\"].data.message\r\n        )\r\n      );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unregisterAuthObserver();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        {this.state.isSignedIn ? (\r\n          <React.Fragment>\r\n            <Header navbar={true} />\r\n            <Route\r\n              path=\"/\"\r\n              render={props => (\r\n                <React.Fragment>\r\n                  <DetailHeader />\r\n                  <Signup\r\n                    tags={this.state.tags}\r\n                    suggestions={this.state.suggestions}\r\n                    handleDelete={this.handleDelete}\r\n                    handleAddition={this.handleAddition}\r\n                    handleSubmit={this.handleSubmit}\r\n                    showError={this.state.showError}\r\n                    get_user={this.get_user}\r\n                  />\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n            <React.Fragment>\r\n              <Header navbar={false} />\r\n              <SignIn />\r\n            </React.Fragment>\r\n          )}\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nimport firebase from \"firebase\";\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      firebase.messaging().useServiceWorker(registration);\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}